name: Build
on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

concurrency:
  # Concurrency group that uses the workflow name and PR number if available
  # or commit SHA as a fallback. If a new build is triggered under that
  # concurrency group while a previous build is running it will be canceled.
  # Repeated pushes to a PR will cancel all previous builds, while multiple
  # merges to main will not cancel.
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        fetch-depth: 0
    - name: Build the package
      run: |
        source $CONDA/etc/profile.d/conda.sh
        conda activate base
        conda config --prepend channels defaults
        conda config --append channels ctools
        conda install conda conda-build conda-index
        conda build conda.recipe --no-test
        aid_version=$(conda search local::anaconda-ident | grep ^anaconda-ident | awk '{print $2}' | tail -1)
        conda install -c local anaconda-ident=$aid_version
        bash tests/test_keymgr.sh --build-only
        mv $CONDA/conda-bld .
    - name: Upload build artifacts
      uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
      with:
        if-no-files-found: error
        name: conda-bld
        path: conda-bld/
  # This is just to test that the windows build process works. We do not
  # actually use this artifact.
  build-win:
    runs-on: windows-latest
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        fetch-depth: 0
    - name: Build the package
      shell: bash
      run: |
        source $CONDA/etc/profile.d/conda.sh
        conda config --prepend channels defaults
        conda config --append channels ctools
        conda config --append channels mcg
        conda activate base
        conda install conda conda-build
        conda build conda.recipe
  tests:
    needs: build
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        # ubuntu-latest runs on x86_64, ubuntu-24.04-arm on arm64
        # macos-13 defaults to osx-64, macos-14 defaults to osx-arm64
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
        # 23.7.0 : first plugin-based variant, but conda info --envs --json is broken
        # 23.9.0 : last variant with the classic default solver
        # 23.10.0 : first variant with the libmamba default solver
        cversion: ['23.7.1', '23.9.0', '23.10.0', '24.11.3', '25.1.1']
    runs-on: ${{ matrix.os }}
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: Download build artfiacts
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
      with:
        name: conda-bld
        path: ./conda-bld
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@505e6394dae86d6a5c7fbb6e3fb8938e3e863830 # v3.1.1
      with:
        miniconda-version: 'latest'
        auto-activate-base: true
        activate-environment: ""
        conda-solver: classic
        channels: defaults,ctools,mcg
    - name: Run local tests
      run: |
        mv conda-bld $CONDA/
        source $CONDA/etc/profile.d/conda.sh
        aid_version=$(conda search local::anaconda-ident | awk '{print $2}' | tail -1)
        conda create -p ./testenv -c local anaconda-ident=$aid_version conda=${{ matrix.cversion }} proxyspy
        source ./testenv/etc/profile.d/conda.sh
        conda activate base
        conda create -n testchild1 --yes
        conda create -n testchild2 --yes
        python tests/test_config.py
    - name: Build the test environment and an installer
      env:
        TEST_REPO_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      run: |
        source $CONDA/etc/profile.d/conda.sh
        conda install constructor conda-index
        aid_version=$(conda search local::anaconda-ident | grep ^anaconda-ident | awk '{print $2}' | tail -1)
        CONDA_PREFIX=$CONDA bash tests/test_installer.sh $TEST_REPO_TOKEN $aid_version ${{ matrix.cversion }}
    - name: Run the installer (Windows)
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: start /wait AIDTest-1.0-Windows-x86_64.exe /S /D=%USERPROFILE%\aidtest
    - name: Run the installer (Unix)
      if: matrix.os != 'windows-latest'
      run: bash AIDTest*.sh -b -p ~/aidtest -k
    - name: Test the installed environment
      env:
        TEST_REPO_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        ANACONDA_IDENT_DEBUG: "1"
        ANACONDA_IDENT_RAISE: "1"
      run: bash tests/test_environment.sh ~/aidtest "$TEST_REPO_TOKEN"
  upload:
    needs: [tests, build-win]
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
      with:
        name: conda-bld
        path: ./conda-bld
    - name: Upload to anaconda.org
      if: github.event_name == 'push'
      env:
        ANACONDA_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
        GITHUB_REF: ${{ github.ref }}
      run: |
        source $CONDA/bin/activate
        conda install anaconda-client
        [[ "$GITHUB_REF" =~ ^refs/tags/ ]] || export LABEL="--label dev"
        # Remove the macos build, use the unix noarch instead
        rm -rf conda-bld/osx-64 || :
        anaconda --verbose --token $ANACONDA_TOKEN upload --user mcg $LABEL conda-bld/*/*.tar.bz2 --force
