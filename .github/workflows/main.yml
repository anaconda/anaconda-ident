name: Build
on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

concurrency:
  # Concurrency group that uses the workflow name and PR number if available
  # or commit SHA as a fallback. If a new build is triggered under that
  # concurrency group while a previous build is running it will be canceled.
  # Repeated pushes to a PR will cancel all previous builds, while multiple
  # merges to main will not cancel.
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

# https://github.com/conda-incubator/setup-miniconda#use-a-default-shell
defaults:
  run:
    shell: bash -el {0}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@835234971496cad1653abb28a638a281cf32541f # v3.2.0
      with:
        miniconda-version: 'latest'
        auto-activate-base: true
        activate-environment: ""
        channels: defaults
    - name: Build the package
      run: |
        conda config --set quiet true
        conda config --prepend channels defaults
        conda install conda-forge::conda-build conda-forge::proxyspy
        conda build conda.recipe --no-test
    - name: Test key manager
      run: |
        bash tests/test_keymgr.sh
        mv $CONDA/conda-bld .
    - name: Upload build artifacts
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        if-no-files-found: error
        name: conda-bld
        path: conda-bld/
  # This is just to test that the windows build process works. We do not
  # actually use this artifact.
  build-win:
    runs-on: windows-latest
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@835234971496cad1653abb28a638a281cf32541f # v3.2.0
      with:
        miniconda-version: 'latest'
        auto-activate-base: true
        activate-environment: ""
        channels: defaults
    - name: Build the package
      run: |
        conda config --prepend channels defaults
        conda config --append channels mcg
        conda install conda-forge::conda-build
        conda build conda.recipe
  tests:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        # ubuntu-latest runs on x86_64, ubuntu-24.04-arm on arm64
        # macos-13 defaults to osx-64, macos-14 defaults to osx-arm64
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
        # 23.7.0 : first plugin-based variant, but conda info --envs --json is broken
        # 23.9.0 : last variant with the classic default solver
        # 23.10.0 : first variant with the libmamba default solver
        cversion: ['23.7.1', '23.9.0', '23.10.0', '24.11.3', '25.5.1']
    runs-on: ${{ matrix.os }}
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Download build artfiacts
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: conda-bld
        path: ./conda-bld
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@835234971496cad1653abb28a638a281cf32541f # v3.2.0
      with:
        miniconda-version: 'latest'
        auto-activate-base: true
        activate-environment: ""
        channels: defaults
    - name: Create test environments and installer
      run: |
        mv conda-bld $CONDA/
        conda config --set quiet true
        conda config --prepend channels defaults
        conda install constructor conda-forge::conda-build
        aid_version=$(conda search local::anaconda-ident | awk '{print $2}' | tail -1)
        conda create -p ./testenv conda=${{ matrix.cversion }} local::anaconda-ident=$aid_version mcg::proxyspy
        mkdir -p ./testenv/envs
        conda create -p ./testenv/envs/testchild1 --yes
        conda create -p ./testenv/envs/testchild2 --yes
        [ -n "$CONDA_PREFIX" ] || CONDA_PREFIX=$CONDA
        bash tests/test_installer.sh ${{ secrets.ANACONDA_TOKEN }} $aid_version ${{ matrix.cversion }}
        if [[ ${{ matrix.cversion }} = 23.7.1 || ${{ matrix.cversion }} = 23.9.0 ]]; then
          conda config --set solver classic
        fi
    - name: Run basic tests
      run: |
        conda deactivate
        source testenv/etc/profile.d/conda.sh
        conda activate base
        export ANACONDA_IDENT_DEBUG=1 ANACONDA_ANON_USAGE_DEBUG=1
        export ANACONDA_IDENT_RAISE=1 ANACONDA_ANON_USAGE_RAISE=1
        CONDA_ANACONDA_IDENT=full conda info
        cd tests
        python test_config.py
    - name: Run the installer (Windows)
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: start /wait AIDTest-1.0-Windows-x86_64.exe /S /D=%USERPROFILE%\aidtest
    - name: Run the installer (Unix)
      if: matrix.os != 'windows-latest'
      run: bash AIDTest*.sh -b -p ~/aidtest -k
    - name: Test the installed environment
      run: |
        export ANACONDA_IDENT_DEBUG=1 ANACONDA_IDENT_RAISE=1
        bash tests/test_environment.sh ~/aidtest ${{ secrets.ANACONDA_TOKEN }}
  upload:
    needs: [tests, build-win]
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        name: conda-bld
        path: ./conda-bld
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@835234971496cad1653abb28a638a281cf32541f # v3.2.0
      with:
        miniconda-version: 'latest'
        auto-activate-base: true
        activate-environment: ""
        channels: defaults
    - name: List packages
      run: find conda-bld
    - name: Upload to anaconda.org
      if: github.event_name == 'push'
      run: |
        conda install anaconda-client
        [[ ${{ github.ref }} =~ ^refs/tags/ ]] || export LABEL="--label dev"
        anaconda --verbose --token ${{ secrets.ANACONDA_TOKEN }} upload --user ctools $LABEL conda-bld/*/*.conda --force
